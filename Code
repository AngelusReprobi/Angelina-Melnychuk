// Import the CapacitiveSensor Library.
#include <CapacitiveSensor.h>


// Name the pin as led. 
#define speaker 11


// Set the Send Pin & Receive Pin.
CapacitiveSensor   cs_2_3 = CapacitiveSensor(2,3);        // 560 OhM resistor  
CapacitiveSensor   cs_2_4 = CapacitiveSensor(2,4);        // 560 OhM resistor 
CapacitiveSensor   cs_2_5 = CapacitiveSensor(2,5);        // 560 OhM resistor  
CapacitiveSensor   cs_2_6 = CapacitiveSensor(2,6);        // 560 OhM resistor  
CapacitiveSensor   cs_2_7 = CapacitiveSensor(2,7);        // 560 OhM resistor 
CapacitiveSensor   cs_2_8 = CapacitiveSensor(2,8);        // 560 OhM resistor  
CapacitiveSensor   cs_2_9 = CapacitiveSensor(2,9);        // 560 OhM resistor  

 

void setup()                    
{
  cs_2_3.set_CS_AutocaL_Millis(0xFFFFFFFF);     // turn off autocalibrate on channel 1 - just as an example

  // Arduino start communicate with computer.
  Serial.begin(9600);
}

void loop()                    
{
  // Set a timer.
  long start = millis();

  // Set the sensitivity of the sensors.
  long total1 =  cs_2_3.capacitiveSensor(200);
  long total2 =  cs_2_4.capacitiveSensor(200);
  long total3 =  cs_2_5.capacitiveSensor(200);
  long total4 =  cs_2_6.capacitiveSensor(200);
  long total5 =  cs_2_7.capacitiveSensor(200);
  long total6 =  cs_2_8.capacitiveSensor(200);
  long total7 =  cs_2_9.capacitiveSensor(200);



  Serial.print(millis() - start);        // check on performance in milliseconds
  Serial.print("\t");                    // tab character for debug windown spacing

  Serial.print(total1);                  // print sensor output 1
  Serial.print("\t");                    // Leave some space before print the next output
  Serial.print(total2);                  // print sensor output 2
  Serial.print("\t");                    // Leave some space before print the next output
  Serial.print(total3);                  // print sensor output 3
  Serial.print("\t");                    // Leave some space before print the next output
  Serial.print(total4);                  // print sensor output 4
  Serial.print("\t");                    // Leave some space before print the next output
  Serial.print(total5);                  // print sensor output 5
  Serial.print("\t");                    // Leave some space before print the next output
  Serial.print(total6);                  // print sensor output 6
  Serial.print("\t");                    // Leave some space before print the next output
  Serial.println(total7);                // print sensor output 7
                                         // "println" - "ln" represent as "line", system will jump to next line after print the output.
  
  

   // When hand is touched the sensor, the speaker will produce a tone.
  // I set a threshold for it, so that the sensor won't be too sensitive.
  if (total1 > 300) tone(speaker,104);   //NOTE_GS2 value
  if (total3 > 300) tone(speaker,233);   //NOTE_AS3
  if (total4 > 300) tone(speaker,262);   //NOTE_C4
  if (total5 > 300) tone(speaker,311);   //NOTE_DS4 
  if (total6 > 300) tone(speaker,370);   //NOTE_FS4
  if (total7 > 300) tone(speaker,440);   //NOTE_A4
  // When hand didn't touch on it, no tone is produced.
  if (total1<=300  &&  total2<=300  &&  total3<=300 && total4<=300  &&  total5<=300  &&  total6<=300 &&  total7<=300)
    noTone(speaker);

  delay(10);                             // arbitrary delay to limit data to serial port 


}
